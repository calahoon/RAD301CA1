@model PagedList.IPagedList<Order>
@using PagedList.Mvc

<table id="tblCusts" class="table table-striped table-condensed table-hover" 
       style="table-layout: fixed; word-wrap: break-word">
    @* Could use white-space:nowrap to avoid line wrap*@
    <thead>
        <tr>
            <th style="width:11%">@Html.DisplayNameFor(o => o.FirstOrDefault().OrderID)</th>
            <th style="width:17%">@Html.DisplayNameFor(o => o.FirstOrDefault().OrderDate)</th>
            <th style="width:18%">@Html.DisplayNameFor(o => o.FirstOrDefault().ShipAddress)</th>
            <th style="width:18%">@Html.DisplayNameFor(o => o.FirstOrDefault().Customer.ContactName)</th>
            <th style="width:15%">@Html.DisplayNameFor(o => o.FirstOrDefault().ShipName)</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ord in Model)
        {
            <tr onclick="listOrders('@ord.Employee.EmployeeID');" style="cursor:pointer">
                <td>
                   @String.Format("{0:d}",ord.OrderID)
                </td>
                <td>
                   @Html.DisplayFor(modelItem => ord.OrderDate)
                </td>
                <td>
                  @* @Html.DisplayFor(modelItem => cust.Country)*@
                   @String.Format("{0:d}, {1:d}, {2:d}", ord.ShipAddress, ord.ShipCity, ord.ShipCountry)
                </td>
                <td>
                   @String.Format("{0:d}, {1:d}", ord.Customer.ContactName, ord.Customer.ContactTitle)
                </td>
                <td>
                   @Html.DropDownListFor(modelItem => ord.Employee.EmployeeID, new SelectList(ViewBag.Employees, "EmployeeID"), "Employee")
                   @Html.DropDownListFor(modelItem => ord.ShipVia, new SelectList(ViewBag.Shippers, "EmployeeID"), "ShipperName")
                    @*@Html.ActionLink("Orders", "CustOrders", "Home",new {id = ord.Employee.EmployeeID}, new {@class="btn btn-info"})*@
                   @* @Ajax.ActionLink("Orders", "CustOrders", new {id = ord.Employee.EmployeeID}, new AjaxOptions{ UpdateTargetId="tblCustOrders", InsertionMode = InsertionMode.Replace, HttpMethod="GET"})*@
                </td>
                <td></td>
                <td>
                     @*@Html.ActionLink("Delete", "CustOrders", "Home", new { id = ord.OrderID }, new {@class="btn btn-info"})*@
                    @using (Html.BeginForm("DeleteConfirmed", "Home", new {id = ord.OrderID}))
                    {
                        <input type="submit" value="Delete" 
                           onclick="return confirm('Are you sure you want to delete record with ID = @ord.OrderID');" />
                        
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.MinimalWithItemCountText,
            new AjaxOptions { UpdateTargetId = "tblCusts", OnSuccess = "shrinkPageControls();"}))

@* Displays 'Page x of y' *@
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

@* Uses ajax to invoke action inserting returned markup in #tblCust *@
@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("tblCust"));*@

@* Uses ajax to invoke action inserting returned markup in #tblCust *@
@*@Html.PagedListPager(Model, pg => Url.Action("Index", new { page = pg }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#tblCusts"))*@