@model PagedList.IPagedList<Order>
@using PagedList.Mvc

<table id="tblCusts" class="table table-striped table-condensed table-hover" 
       style="table-layout: fixed; word-wrap: break-word">
    @* Could use white-space:nowrap to avoid line wrap*@
    <thead>
        <tr>
            <th style="width:10%">@Html.DisplayNameFor(c => c.FirstOrDefault().OrderID)</th>
            <th style="width:30%">@Html.DisplayNameFor(c => c.FirstOrDefault().ShipAddress)</th>
            <th></th>
            <th style="width:5%"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ord in Model)
        {
            <tr onclick="listOrders('@ord.CustomerID');" style="cursor:pointer">
                <td>
                   @String.Format("{0:d}",ord.OrderID)
                </td>
                <td>
                  @* @Html.DisplayFor(modelItem => cust.Country)*@
                   @String.Format("{0:d}, {1:d}, {2:d}", ord.ShipAddress, ord.ShipCity, ord.ShipCountry)
                </td>
                <td>
                    @*<label class="label label-info pull-right">@cust.Orders.Count</label>*@
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.MinimalWithItemCountText,
            new AjaxOptions { UpdateTargetId = "tblCusts", OnSuccess = "shrinkPageControls();"}))

@* Displays 'Page x of y' *@
@*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

@* Uses ajax to invoke action inserting returned markup in #tblCust *@
@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("tblCust"));*@

@* Uses ajax to invoke action inserting returned markup in #tblCust *@
@*@Html.PagedListPager(Model, pg => Url.Action("Index", new { page = pg }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#tblCusts"))*@